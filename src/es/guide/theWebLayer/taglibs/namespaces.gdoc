{hidden}
By default, tags are added to the default Grails namespace and are used with the @g:@ prefix in GSP pages. However, you can specify a different namespace by adding a static property to your @TagLib@ class:
{hidden}

Por defecto, las etiquetas son añadidas en el espacio de nombres de Grails y son usadas con el prefijo @g:@ en las paginas GSP. Sin embargo, puede especificar un espacio de nombres diferente añadiendo una propiedad estatica a su clase @TagLib@:

{code:java}
class SimpleTagLib {
    static namespace = "my"

    def example = { attrs ->
        ...
    }
}
{code}

{hidden}
Here we have specified a @namespace@ of @my@ and hence the tags in this tag lib must then be referenced from GSP pages like this:
{hidden}

Aqui hemos especificado un @namespace@ de @my@ y por lo tanto las etiquetas en esta libreria deben entonces ser referenciadas desde las paginas GSP asi:

{code:xml}
<my:example name="..." />
{code}

{hidden}
where the prefix is the same as the value of the static @namespace@ property. Namespaces are particularly useful for plugins.
{hidden}

Donde el prefijo es igual al valor de la propiedad estatica @namespace@. Los espacios de nombres son particularmente utiles para los plugins.

{hidden}
Tags within namespaces can be invoked as methods using the namespace as a prefix to the method call:
{hidden}

Las etiquetas dentro de los espacios de nombres pueden ser invocadas como metodos usando el espacio de nombre como prefijo para la llamada del metodo:

{code:java}
out << my.example(name:"foo")
{code}

{hidden}
This works from GSP, controllers or tag libraries
{hidden}

Esto funciona desde GSP, controlladores o librerias de etiquetas.